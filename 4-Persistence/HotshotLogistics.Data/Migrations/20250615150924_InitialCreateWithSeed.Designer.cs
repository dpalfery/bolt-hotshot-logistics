// <auto-generated />
using System;
using HotshotLogistics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotshotLogistics.Data.Migrations
{
    [DbContext(typeof(HotshotDbContext))]
    [Migration("20250615150924_InitialCreateWithSeed")]
    partial class InitialCreateWithSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HotshotLogistics.Domain.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LicenseExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            IsActive = true,
                            LastName = "Smith",
                            LicenseExpiryDate = new DateTime(2030, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "A1234567",
                            PhoneNumber = "555-1234"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            IsActive = true,
                            LastName = "Johnson",
                            LicenseExpiryDate = new DateTime(2031, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "B7654321",
                            PhoneNumber = "555-5678"
                        });
                });

            modelBuilder.Entity("HotshotLogistics.Domain.Models.Job", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("AssignedDriverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DropoffAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstimatedDeliveryTime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PickupAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDriverId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = "job-1",
                            Amount = 100.00m,
                            AssignedDriverId = 1,
                            CreatedAt = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DropoffAddress = "456 Elm St",
                            EstimatedDeliveryTime = "2024-06-16T10:00:00Z",
                            PickupAddress = "123 Main St",
                            Priority = "High",
                            Status = "Pending",
                            Title = "Deliver Package A"
                        },
                        new
                        {
                            Id = "job-2",
                            Amount = 75.50m,
                            AssignedDriverId = 2,
                            CreatedAt = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DropoffAddress = "321 Pine St",
                            EstimatedDeliveryTime = "2024-06-17T14:00:00Z",
                            PickupAddress = "789 Oak St",
                            Priority = "Medium",
                            Status = "InTransit",
                            Title = "Deliver Package B"
                        });
                });

            modelBuilder.Entity("HotshotLogistics.Domain.Models.Job", b =>
                {
                    b.HasOne("HotshotLogistics.Domain.Models.Driver", "AssignedDriver")
                        .WithMany()
                        .HasForeignKey("AssignedDriverId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AssignedDriver");
                });
#pragma warning restore 612, 618
        }
    }
}
