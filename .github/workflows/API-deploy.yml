name: API Deploy to Azure

on:
  workflow_run:
    workflows: ["Dot Net API Build and Test"]
    types:
      - completed
    branches:
      - development
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  id-token: write
  contents: read

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if the .NET CI workflow was successful or if it's a manual trigger
    if: (github.event.workflow_run.conclusion == 'success' && github.event_name == 'workflow_run') || github.event_name == 'workflow_dispatch'
    defaults:
      run:
        working-directory: 1-Presentation/HotshotLogistics.Api
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Azure CLI
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.DAVIDS_AZURE_SUB }}
          enable-AzPSSession: true

      - name: Restore dependencies
        run: dotnet restore

      - name: Build application
        run: dotnet build --configuration Release --no-restore

      - name: Publish application
        run: dotnet publish --configuration Release --output ./publish --no-build

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v4
        with:
          app-name: ${{ github.event.inputs.environment || 'dev' }}-hotshot-logistics-function
          package: ./publish
          startup-command: 'dotnet HotshotLogistics.Api.dll'

      - name: Get Key Vault connection string
        id: get-connection-string
        run: |
          CONNECTION_STRING=$(az keyvault secret show --vault-name "${{ github.event.inputs.environment || 'dev' }}-hotshot-logistics-kv" --name "mysql-connection-string" --query value -o tsv)
          echo "connection_string=$CONNECTION_STRING" >> $GITHUB_OUTPUT

      - name: Run database migrations
        run: |
          # Install EF Core tools
          dotnet tool install --global dotnet-ef
          
          # Set connection string for migrations
          export ConnectionStrings__DefaultConnection="${{ steps.get-connection-string.outputs.connection_string }}"
          
          # Run migrations
          cd 4-Persistence/HotshotLogistics.Data
          dotnet ef database update --connection "${{ steps.get-connection-string.outputs.connection_string }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.DAVIDS_AZURE_SUB }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Verify deployment
        run: |
          echo "Deployment completed successfully!"
          echo "Environment: ${{ github.event.inputs.environment || 'dev' }}"
          echo "App Service: ${{ github.event.inputs.environment || 'dev' }}-hotshot-logistics-function"
          echo "Database migrations completed" 