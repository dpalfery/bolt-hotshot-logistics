name: Terraform Deploy

on:
  workflow_run:
    workflows: [".NET CI"]
    types:
      - completed
    branches:
      - development
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    # Only run if the triggering workflow was successful and it's a PR, OR if manually triggered
    if: (github.event.workflow_run.conclusion == 'success' && github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request') || github.event_name == 'workflow_dispatch'
    defaults:
      run:
        working-directory: 7-Deployment/Azure-deploy/solution/HotshotLogistics
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Setup Azure CLI
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.DAVIDS_AZURE_SUB }}
          enable-AzPSSession: true

      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.DAVIDS_AZURE_SUB }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Create tfvars with secrets
        run: |
          cat > hotshot.tfvars << EOF
          # Azure Region
          location = "East US 2"
          
          # Resource Group
          resource_group_name = "rg-hotshot-logistics-dev-eastus2"
          
          # Azure Subscription ID - Using GitHub Secret
          subscription_id = "${{ secrets.DAVIDS_AZURE_SUB }}"
          
          # Environment
          environment = "dev"
          
          # Tags
          tags = {
            Environment = "dev"
            Project     = "hotshot-logistics"
            ManagedBy   = "terraform"
            Owner       = "hotshot-team"
          }
          EOF

      - name: Terraform Plan
        run: terraform plan -var-file="hotshot.tfvars"
        env:
          TF_VAR_subscription_id: ${{ secrets.DAVIDS_AZURE_SUB }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.DAVIDS_AZURE_SUB }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

  
