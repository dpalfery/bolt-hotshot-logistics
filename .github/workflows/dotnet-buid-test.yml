name: Dot Net API Build and Test

on:
  pull_request:
    paths:
      - '**/*.cs'
      - '**/*.csproj'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore
        run: |
          for proj in $(find . -name '*.csproj'); do
            dotnet restore "$proj"
          done
      - name: Install formatter
        run: dotnet tool update -g dotnet-format
      - name: Lint
        run: |
          export PATH="$HOME/.dotnet/tools:$PATH"
          for proj in $(find . -name '*.csproj'); do
            dotnet format "$proj" --verify-no-changes --no-restore
          done
      - name: Build
        run: |
          for proj in $(find . -name '*.csproj'); do
            dotnet build "$proj" --configuration Release --no-restore
          done
      - name: Test
        run: |
          for proj in $(find ./5-Test -name '*.csproj'); do
            dotnet test "$proj" --no-build --configuration Release
          done

  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  secret-scanning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          args: --only-verified --fail --no-update

  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Check for outdated packages
        run: |
          for proj in $(find . -name '*.csproj'); do
            echo "Checking $proj for outdated packages..."
            dotnet list "$proj" package --outdated || true
          done
